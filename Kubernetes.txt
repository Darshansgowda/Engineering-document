#Kubernetes on Google Cloud Platform

Google Kubernetes Engine (GKE) provides a managed environment for deploying, managing, and scaling your containerized applications using Google infrastructure. The Kubernetes Engine environment consists of multiple machines (specifically Google Compute Engine instances) grouped together to form a container cluster.

#Cluster orchestration with Kubernetes Engine

Kubernetes Engine clusters are powered by the Kubernetes open source cluster management system. Kubernetes provides the mechanisms through which you interact with your container cluster. You use Kubernetes commands and resources to deploy and manage your applications, perform administration tasks and set policies, and monitor the health of your deployed workloads.

Kubernetes draws on the same design principles that run popular Google services and provides the same benefits: automatic management, monitoring and liveness probes for application containers, automatic scaling, rolling updates, and more. When you run your applications on a container cluster, you're using technology based on Google's 10+ years of experience running production workloads in containers.

#Kubernetes on Google Cloud Platform

When you run a Kubernetes Engine cluster, you also gain the benefit of advanced cluster management features that Google Cloud Platform provides. These include:

Load-balancing for Compute Engine instances.
Node Pools to designate subsets of nodes within a cluster for additional flexibility.
Automatic scaling of your cluster's node instance count.
Automatic upgrades for your cluster's node software.
Node auto-repair to maintain node health and availability.
Logging and Monitoring with Cloud Monitoring for visibility into your cluster.


###Manage Containerized Apps with Kubernetes Engine####

#Setup and Requirements
gcloud auth list
gcloud config list project

#Setting a default compute zone
gcloud config set compute/zone us-central1-a

#Creating a Kubernetes Engine cluster
gcloud container clusters create [CLUSTER-NAME]

#Get authentication credentials for the cluster
gcloud container clusters get-credentials [CLUSTER-NAME]

#Deploying an application to the cluster
kubectl create deployment hello-server --image=gcr.io/google-samples/hello-app:1.0


kubectl expose deployment hello-server --type=LoadBalancer --port 8080   //expose application to external traffic

kubectl get service  //Inspect the hello-server
